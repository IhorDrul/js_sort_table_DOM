{"version":3,"sources":["scripts/main.js"],"names":["categories","document","querySelectorAll","content","querySelector","elements","convert","field","substring","split","join","forEach","element","toggler","addEventListener","e","sortedContent","sort","first","second","firstElement","children","target","cellIndex","textContent","secondElement","isNaN","localeCompare","append"],"mappings":";AAAA,aAYA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAVA,IAAMA,EAAaC,SAASC,iBAAiB,eACvCC,EAAUF,SAASG,cAAc,SACjCC,EAAeJ,EAAAA,SAASC,iBAAiB,aAEzCI,EAAU,SAAAC,GACd,OAACA,GACIA,GACCA,EAAMC,UAAU,GAAGC,MAAM,KAAKC,KAAK,KAG3C,EAAIV,GAAYW,QAAQ,SAAAC,GAClBC,IAAAA,GAAU,EAEdD,EAAQE,iBAAiB,QAAS,SAACC,GAC3BC,IAAAA,EAAgBX,EAASY,KAAK,SAACC,EAAOC,GACpCC,IAAAA,EAAeF,EAAMG,SAASN,EAAEO,OAAOC,WAAWC,YAClDC,EAAgBN,EAAOE,SAASN,EAAEO,OAAOC,WAAWC,YAEtDE,OAAAA,MAAMpB,EAAQc,IACTP,EACHO,EAAaO,cAAcF,GAC3BA,EAAcE,cAAcP,GAEzBP,EACHP,EAAQc,GAAgBd,EAAQmB,GAChCnB,EAAQmB,GAAiBnB,EAAQc,KAIzCjB,EAAQyB,OAARzB,MAAAA,EAAkBa,EAAAA,IAClBH,GAAWA","file":"main.b0eabe97.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst categories = document.querySelectorAll('thead tr th');\nconst content = document.querySelector('tbody');\nconst elements = [...document.querySelectorAll('tbody tr')];\n\nconst convert = field => (\n  +field\n    ? +field\n    : +(field.substring(1).split(',').join(''))\n);\n\n[...categories].forEach(element => {\n  let toggler = true;\n\n  element.addEventListener('click', (e) => {\n    const sortedContent = elements.sort((first, second) => {\n      const firstElement = first.children[e.target.cellIndex].textContent;\n      const secondElement = second.children[e.target.cellIndex].textContent;\n\n      if (isNaN(convert(firstElement))) {\n        return toggler\n          ? firstElement.localeCompare(secondElement)\n          : secondElement.localeCompare(firstElement);\n      } else {\n        return toggler\n          ? convert(firstElement) - convert(secondElement)\n          : convert(secondElement) - convert(firstElement);\n      }\n    });\n\n    content.append(...sortedContent);\n    toggler = !toggler;\n  });\n});\n"]}